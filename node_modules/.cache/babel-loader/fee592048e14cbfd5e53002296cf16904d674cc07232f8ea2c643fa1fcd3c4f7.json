{"ast":null,"code":"var _jsxFileName = \"/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CommentList from \"./components/CommentList\";\nimport SendComment from \"./components/SendComment\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState({});\n  const [commentsData, setCommentsData] = useState([]);\n  useEffect(() => {\n    // Retrieve data from localStorage\n    const storedCurrentUser = localStorage.getItem(\"currentUserData\");\n    const storedCommentsData = localStorage.getItem(\"commentsData\");\n\n    // Parse JSON data if available, otherwise use default data\n    setCurrentUser(storedCurrentUser ? JSON.parse(storedCurrentUser) : data.currentUser);\n    setCommentsData(storedCommentsData ? JSON.parse(storedCommentsData) : data.comments);\n  }, []); // Empty dependency array to run only once on mount\n\n  useEffect(() => {\n    // Store data in localStorage when currentUser or commentsData changes\n    localStorage.setItem(\"commentsData\", commentsData);\n    localStorage.setItem(\"currentUserData\", currentUser);\n  }, [commentsData, currentUser]); // Run whenever commentsData or currentUser changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CommentList, {\n      currentUser: currentUser,\n      comments: commentsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SendComment, {\n      currentUser: currentUser,\n      comments: commentsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A7dUWiDnm3dmEn4LKTj0GWdLZUU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","CommentList","SendComment","data","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","commentsData","setCommentsData","storedCurrentUser","localStorage","getItem","storedCommentsData","JSON","parse","comments","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CommentList from \"./components/CommentList\";\nimport SendComment from \"./components/SendComment\";\nimport data from \"./data.json\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({});\n  const [commentsData, setCommentsData] = useState([]);\n\n  useEffect(() => {\n    // Retrieve data from localStorage\n    const storedCurrentUser = localStorage.getItem(\"currentUserData\");\n    const storedCommentsData = localStorage.getItem(\"commentsData\");\n\n    // Parse JSON data if available, otherwise use default data\n    setCurrentUser(\n      storedCurrentUser ? JSON.parse(storedCurrentUser) : data.currentUser,\n    );\n    setCommentsData(\n      storedCommentsData ? JSON.parse(storedCommentsData) : data.comments,\n    );\n  }, []); // Empty dependency array to run only once on mount\n\n  useEffect(() => {\n    // Store data in localStorage when currentUser or commentsData changes\n    localStorage.setItem(\"commentsData\", commentsData);\n    localStorage.setItem(\"currentUserData\", currentUser);\n  }, [commentsData, currentUser]); // Run whenever commentsData or currentUser changes\n\n  return (\n    <div className=\"App\">\n      <CommentList currentUser={currentUser} comments={commentsData} />\n      <SendComment currentUser={currentUser} comments={commentsData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IACjE,MAAMC,kBAAkB,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;IAE/D;IACAL,cAAc,CACZG,iBAAiB,GAAGI,IAAI,CAACC,KAAK,CAACL,iBAAiB,CAAC,GAAGT,IAAI,CAACK,WAC3D,CAAC;IACDG,eAAe,CACbI,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACF,kBAAkB,CAAC,GAAGZ,IAAI,CAACe,QAC7D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERnB,SAAS,CAAC,MAAM;IACd;IACAc,YAAY,CAACM,OAAO,CAAC,cAAc,EAAET,YAAY,CAAC;IAClDG,YAAY,CAACM,OAAO,CAAC,iBAAiB,EAAEX,WAAW,CAAC;EACtD,CAAC,EAAE,CAACE,YAAY,EAAEF,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEjC,oBACEH,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA,CAACJ,WAAW;MAACO,WAAW,EAAEA,WAAY;MAACU,QAAQ,EAAER;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjEpB,OAAA,CAACH,WAAW;MAACM,WAAW,EAAEA,WAAY;MAACU,QAAQ,EAAER;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAAClB,EAAA,CA9BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}