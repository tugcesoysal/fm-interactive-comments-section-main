{"ast":null,"code":"var _jsxFileName = \"/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/components/Replies.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport DeleteModal from \"./DeleteModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatRelativeTime(timestamp) {\n  return formatDistanceToNow(new Date(timestamp), {\n    addSuffix: true\n  });\n}\nconst Replies = ({\n  comment,\n  replies,\n  currentUser,\n  commentsData,\n  setCommentsData\n}) => {\n  _s();\n  const [replyContent, setReplyContent] = useState(\"\");\n  const [editedContent, setEditedContent] = useState(\"\");\n  const [openReplyID, setOpenReplyID] = useState(null);\n  const [editingReplyID, setEditingReplyID] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const deleteReply = replyID => {\n    const updatedComments = commentsData.map(comment => ({\n      ...comment,\n      replies: comment.replies.filter(reply => reply.id !== replyID)\n    }));\n    setCommentsData(updatedComments);\n    setModalOpen(false);\n  };\n  const toggleReply = replyID => {\n    setOpenReplyID(prevID => prevID === replyID ? null : replyID);\n  };\n  const toggleEdit = (replyID, content) => {\n    setEditingReplyID(replyID === editingReplyID ? null : replyID);\n    if (replyID !== editingReplyID) {\n      setEditedContent(content);\n    }\n  };\n  const upvote = (commentID, replyID) => {\n    const updatedComments = commentsData.map(c => c.id === commentID ? {\n      ...c,\n      replies: c.replies.map(r => r.id === replyID ? {\n        ...r,\n        score: r.score + 1\n      } : r)\n    } : c);\n    setCommentsData(updatedComments);\n  };\n  const downvote = (commentID, replyID) => {\n    const updatedComments = commentsData.map(c => c.id === commentID ? {\n      ...c,\n      replies: c.replies.map(r => r.id === replyID ? {\n        ...r,\n        score: Math.max(0, r.score - 1)\n      } : r)\n    } : c);\n    setCommentsData(updatedComments);\n  };\n  const sendReply = reply => {\n    const newReply = {\n      id: comment.replies.length + 1,\n      content: replyContent,\n      createdAt: formatRelativeTime(Date.now()),\n      replyingTo: reply.user.username,\n      score: 0,\n      user: currentUser\n    };\n    const updatedComments = commentsData.map(c => c.id === comment.id ? {\n      ...c,\n      replies: [...c.replies, newReply]\n    } : c);\n    setCommentsData(updatedComments);\n    setOpenReplyID(null);\n    setReplyContent(\"\");\n  };\n  const update = (commentID, replyID, content) => {\n    const updatedComments = commentsData.map(c => {\n      if (c.id === commentID) {\n        return {\n          ...c,\n          replies: c.replies.map(r => r.id === replyID ? {\n            ...r,\n            content: editedContent\n          } : r)\n        };\n      } else {\n        return c;\n      }\n    });\n    setCommentsData(updatedComments);\n    setEditingReplyID(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"replies\",\n      children: replies.map(reply => {\n        var _currentUser$image;\n        const {\n          id,\n          user,\n          createdAt,\n          content,\n          score,\n          replyingTo\n        } = reply;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: user.image.png,\n                  alt: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"username\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), reply.user.username === currentUser.username && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"you\",\n                children: \"you\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"createdAt\",\n                children: createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"replyingTo\",\n                children: [\"@\", replyingTo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), editingReplyID === reply.id ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"edit-textarea\",\n                value: editedContent,\n                onChange: e => setEditedContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this) : content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"count-button-div\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => upvote(comment.id, reply.id),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"./images/icon-plus.svg\",\n                    alt: \"plus count button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"count\",\n                  children: score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => downvote(comment.id, reply.id),\n                  className: \"minus-btn\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"./images/icon-minus.svg\",\n                    alt: \"minus count button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), currentUser.username === user.username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setModalOpen(true),\n                  className: \"delete-button\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"./images/icon-delete.svg\",\n                    alt: \"delete button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleEdit(reply.id, reply.content),\n                  className: \"edit-button\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"./images/icon-edit.svg\",\n                    alt: \"edit button\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleReply(reply.id),\n                className: \"reply-button\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"./images/icon-reply.svg\",\n                  alt: \"reply button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), editingReplyID === reply.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => update(comment.id, reply.id, reply.content),\n                className: \"update-button\",\n                children: \"update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), openReplyID === reply.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send-comment card\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Add a comment...\",\n              value: reply.content,\n              onChange: e => setReplyContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_currentUser$image = currentUser.image) === null || _currentUser$image === void 0 ? void 0 : _currentUser$image.png,\n                className: \"current-avatar\",\n                alt: \"user avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => sendReply(reply),\n                className: \"send-button\",\n                children: \"reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), modalOpen && /*#__PURE__*/_jsxDEV(DeleteModal, {\n            deleteItem: deleteReply(reply.id),\n            setModalOpen: setModalOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Replies, \"ptWRtWuzY+BWETaj5rqh0kwhO+E=\");\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["useState","formatDistanceToNow","DeleteModal","jsxDEV","_jsxDEV","Fragment","_Fragment","formatRelativeTime","timestamp","Date","addSuffix","Replies","comment","replies","currentUser","commentsData","setCommentsData","_s","replyContent","setReplyContent","editedContent","setEditedContent","openReplyID","setOpenReplyID","editingReplyID","setEditingReplyID","modalOpen","setModalOpen","deleteReply","replyID","updatedComments","map","filter","reply","id","toggleReply","prevID","toggleEdit","content","upvote","commentID","c","r","score","downvote","Math","max","sendReply","newReply","length","createdAt","now","replyingTo","user","username","update","children","className","_currentUser$image","src","image","png","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","placeholder","deleteItem","_c","$RefreshReg$"],"sources":["/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/components/Replies.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport { formatDistanceToNow } from \"date-fns\";\nimport DeleteModal from \"./DeleteModal\";\n\nfunction formatRelativeTime(timestamp) {\n  return formatDistanceToNow(new Date(timestamp), { addSuffix: true });\n}\n\nconst Replies = ({\n  comment,\n  replies,\n  currentUser,\n  commentsData,\n  setCommentsData,\n}) => {\n  const [replyContent, setReplyContent] = useState(\"\");\n  const [editedContent, setEditedContent] = useState(\"\");\n  const [openReplyID, setOpenReplyID] = useState(null);\n  const [editingReplyID, setEditingReplyID] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const deleteReply = (replyID) => {\n    const updatedComments = commentsData.map((comment) => ({\n      ...comment,\n      replies: comment.replies.filter((reply) => reply.id !== replyID),\n    }));\n    setCommentsData(updatedComments);\n    setModalOpen(false);\n  };\n\n  const toggleReply = (replyID) => {\n    setOpenReplyID((prevID) => (prevID === replyID ? null : replyID));\n  };\n\n  const toggleEdit = (replyID, content) => {\n    setEditingReplyID(replyID === editingReplyID ? null : replyID);\n    if (replyID !== editingReplyID) {\n      setEditedContent(content);\n    }\n  };\n\n  const upvote = (commentID, replyID) => {\n    const updatedComments = commentsData.map((c) =>\n      c.id === commentID\n        ? {\n            ...c,\n            replies: c.replies.map((r) =>\n              r.id === replyID ? { ...r, score: r.score + 1 } : r,\n            ),\n          }\n        : c,\n    );\n\n    setCommentsData(updatedComments);\n  };\n\n  const downvote = (commentID, replyID) => {\n    const updatedComments = commentsData.map((c) =>\n      c.id === commentID\n        ? {\n            ...c,\n            replies: c.replies.map((r) =>\n              r.id === replyID ? { ...r, score: Math.max(0, r.score - 1) } : r,\n            ),\n          }\n        : c,\n    );\n\n    setCommentsData(updatedComments);\n  };\n\n  const sendReply = (reply) => {\n    const newReply = {\n      id: comment.replies.length + 1,\n      content: replyContent,\n      createdAt: formatRelativeTime(Date.now()),\n      replyingTo: reply.user.username,\n      score: 0,\n      user: currentUser,\n    };\n    const updatedComments = commentsData.map((c) =>\n      c.id === comment.id ? { ...c, replies: [...c.replies, newReply] } : c,\n    );\n    setCommentsData(updatedComments);\n    setOpenReplyID(null);\n    setReplyContent(\"\");\n  };\n\n  const update = (commentID, replyID, content) => {\n    const updatedComments = commentsData.map((c) => {\n      if (c.id === commentID) {\n        return {\n          ...c,\n          replies: c.replies.map((r) =>\n            r.id === replyID ? { ...r, content: editedContent } : r,\n          ),\n        };\n      } else {\n        return c;\n      }\n    });\n    setCommentsData(updatedComments);\n    setEditingReplyID(null);\n  };\n\n  return (\n    <>\n      <div className=\"replies\">\n        {replies.map((reply) => {\n          const { id, user, createdAt, content, score, replyingTo } = reply;\n\n          return (\n            <>\n              <div key={id} className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"user-avatar\">\n                    <img src={user.image.png} alt={user.username} />\n                  </div>\n                  <p className=\"username\">{user.username}</p>\n                  {reply.user.username === currentUser.username && (\n                    <p className=\"you\">you</p>\n                  )}\n                  <p className=\"createdAt\">{createdAt}</p>\n                </div>\n                <p className=\"content\">\n                  <span className=\"replyingTo\">@{replyingTo}</span>\n                  {editingReplyID === reply.id ? (\n                    <textarea\n                      className=\"edit-textarea\"\n                      value={editedContent}\n                      onChange={(e) => setEditedContent(e.target.value)}\n                    ></textarea>\n                  ) : (\n                    content\n                  )}\n                </p>\n                <div className=\"card-footer\">\n                  <div className=\"count-button-div\">\n                    <button onClick={() => upvote(comment.id, reply.id)}>\n                      <img\n                        src=\"./images/icon-plus.svg\"\n                        alt=\"plus count button\"\n                      />\n                    </button>\n                    <p className=\"count\">{score}</p>\n                    <button\n                      onClick={() => downvote(comment.id, reply.id)}\n                      className=\"minus-btn\"\n                    >\n                      <img\n                        src=\"./images/icon-minus.svg\"\n                        alt=\"minus count button\"\n                      />\n                    </button>\n                  </div>\n                  {currentUser.username === user.username ? (\n                    <>\n                      <button\n                        onClick={() => setModalOpen(true)}\n                        className=\"delete-button\"\n                      >\n                        <img\n                          src=\"./images/icon-delete.svg\"\n                          alt=\"delete button\"\n                        />\n                        <p>Delete</p>\n                      </button>\n                      <button\n                        onClick={() => toggleEdit(reply.id, reply.content)}\n                        className=\"edit-button\"\n                      >\n                        <img src=\"./images/icon-edit.svg\" alt=\"edit button\" />\n                        <p>Edit</p>\n                      </button>\n                    </>\n                  ) : (\n                    <button\n                      onClick={() => toggleReply(reply.id)}\n                      className=\"reply-button\"\n                    >\n                      <img src=\"./images/icon-reply.svg\" alt=\"reply button\" />\n                      <p>Reply</p>\n                    </button>\n                  )}\n                  {editingReplyID === reply.id && (\n                    <button\n                      onClick={() =>\n                        update(comment.id, reply.id, reply.content)\n                      }\n                      className=\"update-button\"\n                    >\n                      update\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {openReplyID === reply.id && (\n                <div className=\"send-comment card\">\n                  <textarea\n                    placeholder=\"Add a comment...\"\n                    value={reply.content}\n                    onChange={(e) => setReplyContent(e.target.value)}\n                  ></textarea>\n                  <div className=\"card-footer\">\n                    <img\n                      src={currentUser.image?.png}\n                      className=\"current-avatar\"\n                      alt=\"user avatar\"\n                    />\n                    <button\n                      onClick={() => sendReply(reply)}\n                      className=\"send-button\"\n                    >\n                      reply\n                    </button>\n                  </div>\n                </div>\n              )}\n              {modalOpen && <div className=\"overlay\"></div>}\n              {modalOpen && (\n                <DeleteModal\n                  deleteItem={deleteReply(reply.id)}\n                  setModalOpen={setModalOpen}\n                />\n              )}\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Replies;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}