{"ast":null,"code":"var _jsxFileName = \"/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/components/SendComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendComment = ({\n  currentUser\n}) => {\n  _s();\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  if (!currentUser || !currentUser.image || !currentUser.image.png) {\n    return null;\n  }\n  const sendComment = () => {\n    // Retrieve comments data from localStorage\n    const commentsData = localStorage.getItem(\"commentsData\");\n\n    // Parse the comments data from JSON\n    const parsedData = JSON.parse(commentsData);\n\n    // Check if parsedData is not null and is an array\n    if (parsedData && Array.isArray(parsedData)) {\n      // Create a new comment object\n      const newComment = {\n        id: parsedData.length + 1,\n        content: newCommentContent,\n        createdAt: new Date().toISOString(),\n        // Fixed date format\n        score: 0,\n        user: currentUser,\n        replies: []\n      };\n\n      // Push the new comment to the comments array\n      parsedData.push(newComment);\n\n      // Store the updated comments data back to localStorage\n      localStorage.setItem(\"commentsData\", JSON.stringify(parsedData));\n    } else {\n      console.error(\"Comments data is missing or not in the correct format\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"send-comment card\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Add a comment...\",\n      value: newCommentContent,\n      onChange: e => setNewCommentContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.image.png,\n        className: \"current-avatar\",\n        alt: \"user avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendComment,\n        className: \"send-button\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SendComment, \"KIO2T29KXfjcnEh7yzDuehXB2aE=\");\n_c = SendComment;\nexport default SendComment;\nvar _c;\n$RefreshReg$(_c, \"SendComment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SendComment","currentUser","_s","newCommentContent","setNewCommentContent","image","png","sendComment","commentsData","localStorage","getItem","parsedData","JSON","parse","Array","isArray","newComment","id","length","content","createdAt","Date","toISOString","score","user","replies","push","setItem","stringify","console","error","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/components/SendComment.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst SendComment = ({ currentUser }) => {\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n\n  if (!currentUser || !currentUser.image || !currentUser.image.png) {\n    return null;\n  }\n\n  const sendComment = () => {\n    // Retrieve comments data from localStorage\n    const commentsData = localStorage.getItem(\"commentsData\");\n\n    // Parse the comments data from JSON\n    const parsedData = JSON.parse(commentsData);\n\n    // Check if parsedData is not null and is an array\n    if (parsedData && Array.isArray(parsedData)) {\n      // Create a new comment object\n      const newComment = {\n        id: parsedData.length + 1,\n        content: newCommentContent,\n        createdAt: new Date().toISOString(), // Fixed date format\n        score: 0,\n        user: currentUser,\n        replies: [],\n      };\n\n      // Push the new comment to the comments array\n      parsedData.push(newComment);\n\n      // Store the updated comments data back to localStorage\n      localStorage.setItem(\"commentsData\", JSON.stringify(parsedData));\n    } else {\n      console.error(\"Comments data is missing or not in the correct format\");\n    }\n  };\n\n  return (\n    <div className=\"send-comment card\">\n      <textarea\n        placeholder=\"Add a comment...\"\n        value={newCommentContent}\n        onChange={(e) => setNewCommentContent(e.target.value)}\n      ></textarea>\n      <div className=\"card-footer\">\n        <img\n          src={currentUser.image.png}\n          className=\"current-avatar\"\n          alt=\"user avatar\"\n        />\n        <button onClick={sendComment} className=\"send-button\">\n          send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SendComment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9D,IAAI,CAACI,WAAW,IAAI,CAACA,WAAW,CAACI,KAAK,IAAI,CAACJ,WAAW,CAACI,KAAK,CAACC,GAAG,EAAE;IAChE,OAAO,IAAI;EACb;EAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;;IAEzD;IACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;;IAE3C;IACA,IAAIG,UAAU,IAAIG,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,EAAE;MAC3C;MACA,MAAMK,UAAU,GAAG;QACjBC,EAAE,EAAEN,UAAU,CAACO,MAAM,GAAG,CAAC;QACzBC,OAAO,EAAEhB,iBAAiB;QAC1BiB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAAE;QACrCC,KAAK,EAAE,CAAC;QACRC,IAAI,EAAEvB,WAAW;QACjBwB,OAAO,EAAE;MACX,CAAC;;MAED;MACAd,UAAU,CAACe,IAAI,CAACV,UAAU,CAAC;;MAE3B;MACAP,YAAY,CAACkB,OAAO,CAAC,cAAc,EAAEf,IAAI,CAACgB,SAAS,CAACjB,UAAU,CAAC,CAAC;IAClE,CAAC,MAAM;MACLkB,OAAO,CAACC,KAAK,CAAC,uDAAuD,CAAC;IACxE;EACF,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCjC,OAAA;MACEkC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAE/B,iBAAkB;MACzBgC,QAAQ,EAAGC,CAAC,IAAKhC,oBAAoB,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACZ1C,OAAA;MAAKgC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BjC,OAAA;QACE2C,GAAG,EAAEzC,WAAW,CAACI,KAAK,CAACC,GAAI;QAC3ByB,SAAS,EAAC,gBAAgB;QAC1BY,GAAG,EAAC;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACF1C,OAAA;QAAQ6C,OAAO,EAAErC,WAAY;QAACwB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEtD;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CAvDIF,WAAW;AAAA6C,EAAA,GAAX7C,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}