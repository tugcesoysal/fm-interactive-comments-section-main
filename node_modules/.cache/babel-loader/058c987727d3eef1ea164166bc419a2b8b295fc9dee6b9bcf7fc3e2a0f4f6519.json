{"ast":null,"code":"var _jsxFileName = \"/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/components/SendComment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendComment = ({\n  currentUser,\n  comments\n}) => {\n  _s();\n  var _currentUser$image;\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n  const sendComment = () => {\n    const newComment = {\n      id: comments.length + 1,\n      content: newCommentContent,\n      createdAt: new Date().toISOString(),\n      score: 0,\n      user: currentUser,\n      replies: []\n    };\n    const updatedComments = [...comments, newComment];\n    localStorage.setItem(\"commentsData\", JSON.stringify(updatedComments));\n    setNewCommentContent(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"send-comment card\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Add a comment...\",\n      value: newCommentContent,\n      onChange: e => setNewCommentContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: (_currentUser$image = currentUser.image) === null || _currentUser$image === void 0 ? void 0 : _currentUser$image.png,\n        className: \"current-avatar\",\n        alt: \"user avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendComment,\n        className: \"send-button\",\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SendComment, \"KIO2T29KXfjcnEh7yzDuehXB2aE=\");\n_c = SendComment;\nexport default SendComment;\nvar _c;\n$RefreshReg$(_c, \"SendComment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SendComment","currentUser","comments","_s","_currentUser$image","newCommentContent","setNewCommentContent","sendComment","newComment","id","length","content","createdAt","Date","toISOString","score","user","replies","updatedComments","localStorage","setItem","JSON","stringify","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","image","png","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/components/SendComment.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst SendComment = ({ currentUser, comments }) => {\n  const [newCommentContent, setNewCommentContent] = useState(\"\");\n\n  const sendComment = () => {\n    const newComment = {\n      id: comments.length + 1,\n      content: newCommentContent,\n      createdAt: new Date().toISOString(),\n      score: 0,\n      user: currentUser,\n      replies: [],\n    };\n\n    const updatedComments = [...comments, newComment];\n\n    localStorage.setItem(\"commentsData\", JSON.stringify(updatedComments));\n    setNewCommentContent(\"\");\n  };\n\n  return (\n    <div className=\"send-comment card\">\n      <textarea\n        placeholder=\"Add a comment...\"\n        value={newCommentContent}\n        onChange={(e) => setNewCommentContent(e.target.value)}\n      ></textarea>\n      <div className=\"card-footer\">\n        <img\n          src={currentUser.image?.png}\n          className=\"current-avatar\"\n          alt=\"user avatar\"\n        />\n        <button onClick={sendComment} className=\"send-button\">\n          send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SendComment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,kBAAA;EACjD,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAG;MACjBC,EAAE,EAAEP,QAAQ,CAACQ,MAAM,GAAG,CAAC;MACvBC,OAAO,EAAEN,iBAAiB;MAC1BO,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAEf,WAAW;MACjBgB,OAAO,EAAE;IACX,CAAC;IAED,MAAMC,eAAe,GAAG,CAAC,GAAGhB,QAAQ,EAAEM,UAAU,CAAC;IAEjDW,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACJ,eAAe,CAAC,CAAC;IACrEZ,oBAAoB,CAAC,EAAE,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCzB,OAAA;MACE0B,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAErB,iBAAkB;MACzBsB,QAAQ,EAAGC,CAAC,IAAKtB,oBAAoB,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACZlC,OAAA;MAAKwB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BzB,OAAA;QACEmC,GAAG,GAAA9B,kBAAA,GAAEH,WAAW,CAACkC,KAAK,cAAA/B,kBAAA,uBAAjBA,kBAAA,CAAmBgC,GAAI;QAC5Bb,SAAS,EAAC,gBAAgB;QAC1Bc,GAAG,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACFlC,OAAA;QAAQuC,OAAO,EAAE/B,WAAY;QAACgB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEtD;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAtCIH,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}