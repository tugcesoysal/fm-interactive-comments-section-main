{"ast":null,"code":"var _jsxFileName = \"/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/components/CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Comment from \"./Comment\";\nimport DeleteModal from \"./DeleteModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentList = ({\n  currentUser,\n  commentsData,\n  setCommentsData\n}) => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const deleteItem = (commentID, replyID) => {\n    if (replyID) {\n      const updatedComments = commentsData.map(comment => ({\n        ...comment,\n        replies: comment.replies.filter(reply => reply.id !== replyID)\n      }));\n      setCommentsData(updatedComments);\n    } else {\n      const updatedComments = commentsData.filter(comment => {\n        if (comment.id === commentID) {\n          return false;\n        } else {\n          const updatedReplies = comment.replies.filter(reply => reply.id !== commentID);\n          comment.replies = updatedReplies;\n          return true;\n        }\n      });\n      setCommentsData(updatedComments);\n      setModalOpen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: commentsData.map(comment => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        currentUser: currentUser,\n        commentsData: commentsData,\n        setCommentsData: setCommentsData,\n        setModalOpen: setModalOpen\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), modalOpen && /*#__PURE__*/_jsxDEV(DeleteModal, {\n        modalOpen: modalOpen,\n        setModalOpen: setModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true))\n  }, void 0, false);\n};\n_s(CommentList, \"CMfkJY0oHKX43wkRh7WkxSiVV1E=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useState","Comment","DeleteModal","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentList","currentUser","commentsData","setCommentsData","_s","modalOpen","setModalOpen","deleteItem","commentID","replyID","updatedComments","map","comment","replies","filter","reply","id","updatedReplies","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/zeyneptugcesoysal/Downloads/interactive-comments-section-main/src/components/CommentList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Comment from \"./Comment\";\nimport DeleteModal from \"./DeleteModal\";\n\nconst CommentList = ({ currentUser, commentsData, setCommentsData }) => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const deleteItem = (commentID, replyID) => {\n    if (replyID) {\n      const updatedComments = commentsData.map((comment) => ({\n        ...comment,\n        replies: comment.replies.filter((reply) => reply.id !== replyID),\n      }));\n      setCommentsData(updatedComments);\n    } else {\n      const updatedComments = commentsData.filter((comment) => {\n        if (comment.id === commentID) {\n          return false;\n        } else {\n          const updatedReplies = comment.replies.filter(\n            (reply) => reply.id !== commentID,\n          );\n          comment.replies = updatedReplies;\n          return true;\n        }\n      });\n      setCommentsData(updatedComments);\n      setModalOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {commentsData.map((comment) => (\n        <>\n          <Comment\n            key={comment.id}\n            comment={comment}\n            currentUser={currentUser}\n            commentsData={commentsData}\n            setCommentsData={setCommentsData}\n            setModalOpen={setModalOpen}\n          />\n          {modalOpen && <div className=\"overlay\"></div>}\n          {modalOpen && (\n            <DeleteModal modalOpen={modalOpen} setModalOpen={setModalOpen} />\n          )}\n        </>\n      ))}\n    </>\n  );\n};\n\nexport default CommentList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMc,UAAU,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;IACzC,IAAIA,OAAO,EAAE;MACX,MAAMC,eAAe,GAAGR,YAAY,CAACS,GAAG,CAAEC,OAAO,KAAM;QACrD,GAAGA,OAAO;QACVC,OAAO,EAAED,OAAO,CAACC,OAAO,CAACC,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKP,OAAO;MACjE,CAAC,CAAC,CAAC;MACHN,eAAe,CAACO,eAAe,CAAC;IAClC,CAAC,MAAM;MACL,MAAMA,eAAe,GAAGR,YAAY,CAACY,MAAM,CAAEF,OAAO,IAAK;QACvD,IAAIA,OAAO,CAACI,EAAE,KAAKR,SAAS,EAAE;UAC5B,OAAO,KAAK;QACd,CAAC,MAAM;UACL,MAAMS,cAAc,GAAGL,OAAO,CAACC,OAAO,CAACC,MAAM,CAC1CC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKR,SAC1B,CAAC;UACDI,OAAO,CAACC,OAAO,GAAGI,cAAc;UAChC,OAAO,IAAI;QACb;MACF,CAAC,CAAC;MACFd,eAAe,CAACO,eAAe,CAAC;MAChCJ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAmB,QAAA,EACGhB,YAAY,CAACS,GAAG,CAAEC,OAAO,iBACxBf,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA,CAACH,OAAO;QAENkB,OAAO,EAAEA,OAAQ;QACjBX,WAAW,EAAEA,WAAY;QACzBC,YAAY,EAAEA,YAAa;QAC3BC,eAAe,EAAEA,eAAgB;QACjCG,YAAY,EAAEA;MAAa,GALtBM,OAAO,CAACI,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMhB,CAAC,EACDjB,SAAS,iBAAIR,OAAA;QAAK0B,SAAS,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC5CjB,SAAS,iBACRR,OAAA,CAACF,WAAW;QAACU,SAAS,EAAEA,SAAU;QAACC,YAAY,EAAEA;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACjE;IAAA,eACD,CACH;EAAC,gBACF,CAAC;AAEP,CAAC;AAAClB,EAAA,CA/CIJ,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}